[project]
name = "django-sqlite-backup"
version = "0.1.0"
description = "A Django app to easily backup your sqlite database through an endpoint."
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [
    {name = "Ferran Jovell", email = "ferran.jovell+gh@gmail.com"}
]
keywords = ["django"]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
    "Environment :: Web Environment",
    "Framework :: Django"
]
 dependencies = [
    "Django==4.1.1",
    "asgiref==3.8.1"
 ]

[project.urls]
homepage = "https://github.com/mrswats/django-sqlite-backup"
"Bug Tracker" = "https://github.com/mrswats/django-sqlite-backup/issues"

[project.optional-dependencies]
aws = [
    "boto3",
]
test = [
    "boto3",
    "coverage",
    "moto",
    "pytest",
    "pytest-django",
    "time-machine",
]

[build-system]
requires = ["setuptools>=67.4"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["django_sqlite_backup"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "testing.settings"

[tool.black]
line-length = 99
target_version = ["py38"]
skip-string-normalization = false
include = "\\.pyi?$"
exclude = """
(
  /(
      \\.eggs         # exclude a few common directories in the
    | \\.git          # root of the project
    | \\.hg
    | \\.mypy_cache
    | \\.tox
    | \\.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
"""

[tool.coverage.run]
source = ["django_sqlite_backup"]
branch = true

[tool.coverage.report]
skip_empty = false
fail_under = 90
exclude_also = [
    "if __name__ == .__main__.:",
    "\\.\\.\\.",
]
